#include <stdio.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <linux/limits.h>
#include <dirent.h>

int mycwd() {
  //char *getcwd(char buf[.size], size_t size);

  char cwd[PATH_MAX];
 if(getcwd(cwd,sizeof(cwd)) != NULL){
  printf("%s/n",cwd);
 }else{
   perror("getcwd() error");
   return 1 ;
 };
  
  return 0 ;
}

int mymkdir() {
  // int mkdir(const char *pathname, mode_t mode);

  char pat[PATH_MAX];
  printf("Nome do diretorio");
  scanf("%s",pat);
  if(mkdir(pat,755) != 0){
    perror("mkdir() error");
    return 1 ;
  }
  return 0 ;
}

int myrmdir() {

  // int rmdir(const char *pathname); 
     char diretorio[PATH_MAX];
     printf("Nome do diretorio");
     scanf("%s",diretorio);
    if (rmdir(diretorio) != NULL)
     perror("rmdir() error"); 
     else
    printf("removed!");
  return 0;
}

int mycd() {
  // int chdir(const char *path);
    char diretorio[PATH_MAX];
    printf("Nome do diretorio");
    scanf("%s",diretorio);
   if(chdir(diretorio) != NULL){
     perror("chdir() error");
     return -1;
     }
  return 0;
}

int mystat() {
  // int stat(const char *restrict pathname, struct stat *restrict statbuf);


  
  return 0;
}

int myls() {
  // DIR *opendir(const char *name);
  // struct dirent *readdir(DIR *dirp);
  // int closedir(DIR *dirp);
  
  return 0;
}

int main(int argc, char** argv) {
  int test = 0;
  while(test == 0) {
    char in[PATH_MAX];
    printf("myshell> ");
    scanf("%s",in);
  
    if(strcmp(in, "exit") == 0) {
      test = 1;
    } else if(strcmp(in, "cwd") == 0) {
      mycwd();
    } else if(strcmp(in, "mkdir") == 0) {
      mymkdir();
    } else if(strcmp(in, "rmdir") == 0) {
      myrmdir();
    } else if(strcmp(in, "cd") == 0) {
      mycd();
    } else if(strcmp(in, "stat") == 0) {
      mystat();
    } else if(strcmp(in, "ls") == 0) {
      myls();
    } else {
      printf("Comando n√£o encontrado\n");
    }
  }
}
